# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  PYTHON: 'python3.8'
  INC_VER: '1.12'
  IMAGE_NAME: 'neural-compressor'
  IMAGE_TAG: '1.12'
  INC_BRANCH: 'master'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool: 
      vmImageName: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Login to repo
      inputs:
        command: login
        containerRegistry: inc-internal
      
    - script: |
        echo "pass"
        #docker pull amr-registry-pre.caas.intel.com/neural-compressor/test-inc:v1.12
        #workspace=`pwd`
        #rm ${workspace}/cert.zip
        #http_proxy='' && curl http://certificates.intel.com/repository/certificates/IntelSHA2RootChain-Base64.zip -o cert.zip
        #ls -l ${workspace}
        #sudo unzip -o ${workspace}/cert.zip -d /usr/local/share/ca-certificates/
        #rm ${workspace}/cert.zip
        #ls -l ${workspace}
        #sudo update-ca-certificates || sudo update-ca-trust
        #sudo service docker restart
      displayName: 'Add certificate'
        
    - script: docker build --build-arg PYTHON=${PYTHON} --build-arg INC_BRANCH=${INC_BRANCH} -f Dockerfile.devel -t ${IMAGE_NAME}:${IMAGE_TAG} .
      displayName: 'Build Container'
    
    - script: |
        docker tag ${IMAGE_NAME}:${IMAGE_TAG} amr-registry-pre.caas.intel.com/neural-compressor/test-inc:${IMAGE_TAG}
        vi /etc/resolv.conf
      displayName: 'Tag Container'